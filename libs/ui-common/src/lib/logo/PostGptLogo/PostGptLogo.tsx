import { BaseSvgIcon, BaseSvgIconProps } from '../../icon';

type ColorScheme =
  | 'green-gray-green-white'
  | 'green-gray-gray-white'
  | 'green-white-green-white'
  | 'green-white-gray-white'
  | 'gray-white-gray-green'
  | 'gray-white-white-green'
  | 'green-white-green-gray'
  | 'green-white-white-gray'
  | 'white-green-white-gray'
  | 'white-green-green-gray'
  | 'white-gray-white-gray'
  | 'green-gray-green-gray'
  | 'transparent-gray-gray-transparent'
  | 'green-gray-gray-transparent';

interface PostGptLogoProps extends BaseSvgIconProps {
  colorScheme?: ColorScheme;
  full?: boolean;
}

type ColorSet = {
  color1: string;
  color2: string;
  color3: string;
  color4: string;
};

type Colors = {
  [key in ColorScheme]: ColorSet;
};

const colors: Colors = {
  'green-gray-green-white': {
    color1: '#329273',
    color2: '#030b09',
    color3: '#329273',
    color4: '#fff',
  },
  'green-gray-gray-white': {
    color1: '#329273',
    color2: '#030b09',
    color3: '#030b09',
    color4: '#fff',
  },
  'green-white-green-white': {
    color1: '#329273',
    color2: '#fff',
    color3: '#329273',
    color4: '#fff',
  },
  'green-white-gray-white': {
    color1: '#329273',
    color2: '#fff',
    color3: '#030b09',
    color4: '#fff',
  },
  'gray-white-gray-green': {
    color1: '#030b09',
    color2: '#fff',
    color3: '#030b09',
    color4: '#329273',
  },
  'gray-white-white-green': {
    color1: '#030b09',
    color2: '#fff',
    color3: '#fff',
    color4: '#329273',
  },
  'green-white-green-gray': {
    color1: '#329273',
    color2: '#fff',
    color3: '#329273',
    color4: '#030b09',
  },
  'green-white-white-gray': {
    color1: '#329273',
    color2: '#fff',
    color3: '#fff',
    color4: '#030b09',
  },
  'white-green-white-gray': {
    color1: '#fff',
    color2: '#329273',
    color3: '#fff',
    color4: '#030b09',
  },
  'white-green-green-gray': {
    color1: '#fff',
    color2: '#329273',
    color3: '#329273',
    color4: '#030b09',
  },
  'white-gray-white-gray': {
    color1: '#fff',
    color2: '#030b09',
    color3: '#fff',
    color4: '#030b09',
  },
  'green-gray-green-gray': {
    color1: '#329273',
    color2: '#030b09',
    color3: '#329273',
    color4: '#030b09',
  },
  'transparent-gray-gray-transparent': {
    color1: 'transparent',
    color2: '#030b09',
    color3: '#329273',
    color4: 'transparent',
  },
  'green-gray-gray-transparent': {
    color1: '#329273',
    color2: '#030b09',
    color3: '#030b09',
    color4: '#transparent',
  },
};

export const PostGptLogo: React.FC<PostGptLogoProps> = ({
  colorScheme = 'green-gray-gray-white',
  full = true,
  ...props
}) => {
  const { color1, color2, color3, color4 } = colors[colorScheme];
  return (
    <BaseSvgIcon
      width="100%"
      height="100%"
      viewBox={`0 0 ${full ? '512' : '230'} 200`}
      {...props}
    >
      <g fill="none" fillRule="evenodd">
        <path d="m0 0h512v200h-512z" fill={color4} />
        <g fillRule="nonzero">
          <rect
            fill={color1}
            height="116.862439"
            rx="7.539512"
            width="103.668293"
            x="63"
            y="42"
          />
          <path
            d="m28.8245064 17.8896867-.7236277 12.4222768c-.3618139 5.4272084 7.7186963 5.9096269 8.0805101.6030232l.7236278-12.4222768c.3618139-5.3066037-7.5980916-5.7890223-8.0805102-.6030232zm-27.37725085-16.76404349c0-.12060463 61.74957025-.96483704 61.99077955-.72362778 1.9296741 1.68846481 2.5326972 21.58822867 2.5326972 41.84980647-5.7890222 5.0653944-16.8846481 5.4272083-24.723949 5.0653944-3.256325-.2412093-13.2665093-3.3769296-13.3871139 2.8945111-.7236278 15.3167879 4.7035806 28.3420879 15.0755787 38.1110629-17.8494852.4824185-40.8849694 0-41.84980643-1.8090694-2.41209259-4.3417667-.12060463-85.26747306.36181388-85.38807769z"
            fill={color2}
            transform="translate(81.848779 55.777681)"
          />
          {full && (
            <path
              d="m15.960661 1.56477068c9.8267598 0 16.2110242 5.94612859 16.2110242 14.89661692 0 8.8253066-6.3842644 14.3332994-16.2110242 14.3332994h-6.19649195v14.5836628h-9.13826078v-43.81357912zm-.5633175 21.34347212c4.5065396 0 7.6360809-1.7525432 7.6360809-6.4468552 0-4.6317212-3.1295413-6.50944606-7.6360809-6.50944606h-5.63317445v12.95630126zm38.2429955-10.6404407c7.3857176 0 17.024705 5.5705837 17.024705 16.9621142 0 11.3915306-9.6389874 16.7743417-17.024705 16.7743417s-17.0872959-5.3828111-17.0872959-16.7743417c0-11.3915305 9.7015783-16.9621142 17.0872959-16.9621142zm0 7.9490351c-4.0684038 0-8.3871709 3.0669505-8.3871709 9.0130791 0 5.7583561 4.3187671 8.8253067 8.3871709 8.8253067 4.0058129 0 8.3871708-3.0669506 8.3871708-8.8253067 0-5.9461286-4.3813579-9.0130791-8.3871708-9.0130791zm38.055223 2.3784514c-1.0014533-2.3158606-2.4410423-3.1921321-4.1935855-3.1921321-1.6273615 0-3.1295413 1.0014532-3.1295413 2.4410422 0 1.3769982.8762715 2.2532698 2.6288147 2.8791781l3.9432221 1.439589c4.7569029 1.6899523 9.388624 3.4424955 9.388624 9.7641691 0 6.509446-6.4468551 10.2023048-13.018892 10.2023048-5.9461285 0-11.579303-3.5050863-12.8937104-9.2008516l7.0727635-2.190679c.8136808 2.190679 2.5662239 4.2561763 5.8209469 4.2561763 2.3158607 0 4.0684038-1.5021799 4.0684038-3.1295414 0-1.064044-.7510899-2.0029064-2.6914056-2.7539964l-3.7554496-1.3144073c-6.3842644-2.3158607-9.3260333-5.6331745-9.3260333-10.0771232 0-5.8835378 5.445402-9.451215 11.5167123-9.451215 6.133901 0 10.2023048 3.3173139 12.0800296 8.3871709zm28.604008 15.2721619c1.689952 0 2.941769-.1877725 4.318767-.6884991v7.5108993c-1.376998.6259082-3.505086 1.064044-6.634628 1.064044-5.069857 0-9.326033-1.7525431-9.326033-10.9533947v-14.5836628h-4.56913v-7.3857176h4.56913v-7.63608094h8.950488v7.63608094h6.947582v7.3857176h-6.947582v14.5210719c0 1.5021799.438136 3.1295414 2.691406 3.1295414zm70.226908-15.7728885c1.940316 14.7088444-7.636081 23.909696-19.465747 23.909696-12.455575 0-22.72047-9.2008516-22.72047-22.5326978s10.515259-22.53269779 22.72047-22.53269779c5.820947 0 10.953395 1.87772482 14.708844 5.19503866l-5.507992 6.19649193c-2.315861-1.6273615-5.445402-2.81658725-8.637535-2.81658725-7.949035 0-13.769982 5.82094695-13.769982 13.95775445 0 8.1368076 5.633175 13.9577545 13.206665 13.9577545 5.758356 0 9.764169-2.0654973 11.015986-7.5734901h-10.327487v-7.7612626zm22.094562-20.52979132c9.82676 0 16.211025 5.94612859 16.211025 14.89661692 0 8.8253066-6.384265 14.3332994-16.211025 14.3332994h-6.196492v14.5836628h-9.13826v-43.81357912zm-.563317 21.34347212c4.506539 0 7.636081-1.7525432 7.636081-6.4468552 0-4.6317212-3.129542-6.50944606-7.636081-6.50944606h-5.633175v12.95630126zm52.451113-21.34347212v8.38717086h-10.890804v35.42640826h-9.138261v-35.42640826h-10.953394v-8.38717086z"
              fill={color3}
              transform="translate(184.891165 76.873817)"
            />
          )}
        </g>
      </g>
    </BaseSvgIcon>
  );
};

export default PostGptLogo;
